# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
set_param power.BramSDPPropagationFix 1
set_param power.enableUnconnectedCarry8PinPower 1
set_param power.enableCarry8RouteBelPower 1
set_param power.enableLutRouteBelPower 1
set_param synth.incrementalSynthesisCache C:/Users/Ali/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-14588-Aloshka-Laptop/incrSyn
set_msg_config -id {Common 17-41} -limit 10000000
set_msg_config -id {Synth 8-256} -limit 10000
set_msg_config -id {Synth 8-638} -limit 10000
create_project -in_memory -part xczu7ev-ffvc1156-2-e

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.cache/wt} [current_project]
set_property parent.project_path {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.xpr} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property board_part xilinx.com:zcu104:part0:1.1 [current_project]
set_property ip_output_repo {f:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.cache/ip} [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_verilog -library xil_defaultlib -sv {
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_key_exp/AES_expansion_interface.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_key_exp/AES_key_expansion.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_rounds/AES_round_operation.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_key_exp/G_function.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_key_exp/G_interface.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_rounds/MUX2x1.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_key_exp/RC_rom.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_key_exp/S_box.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_rounds/S_box_v2.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/controller/controller.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_rounds/mix_columns.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_rounds/rounds_interface.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_rounds/shift_rows.sv}
  {F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/sources_1/imports/Design/AES_128.sv}
}
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc {{F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/constrs_1/new/timing.xdc}}
set_property used_in_implementation false [get_files {{F:/Aloshka/Collage/post collage material/AES/RTL/FPGA Synthesis/AES_128/AES_128.srcs/constrs_1/new/timing.xdc}}]

set_param ips.enableIPCacheLiteLoad 0
close [open __synthesis_is_running__ w]

synth_design -top AES_128 -part xczu7ev-ffvc1156-2-e -fanout_limit 100 -retiming -fsm_extraction one_hot -keep_equivalent_registers -resource_sharing off -no_lc -cascade_dsp tree


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef AES_128.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file AES_128_utilization_synth.rpt -pb AES_128_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
